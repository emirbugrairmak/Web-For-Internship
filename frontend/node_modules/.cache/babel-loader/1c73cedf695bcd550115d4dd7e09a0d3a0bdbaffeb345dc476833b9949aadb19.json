{"ast":null,"code":"var _jsxFileName = \"/Users/emirbugrairmak/Desktop/Full-Stack-Project/frontend/src/components/Navbar.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Navbar() {\n  _s();\n  const navigate = useNavigate();\n  const isLoggedIn = !!localStorage.getItem('token'); // Kullanıcı giriş yapmış mı yapmamış mı kontrol ediliyor. localStorage ile token kontrolü sağlanıyor.\n  // !! ile boolean değer döndürülüyor.\n\n  const handleLogout = () => {\n    // Çıkış yapma işlemi.\n    localStorage.removeItem('token'); // localStorage'dan token siliniyor.\n    navigate('/login'); // login sayfasına yönlendiriliyor.\n  };\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    className: \"navbar\",\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/files\",\n      children: \"Dosyalar\\u0131m\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/upload\",\n      children: \"Dosya Y\\xFCkle\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), isLoggedIn ?\n    /*#__PURE__*/\n    // kullanıcı giriş yapmışsa (isLoggedIn true).\n    _jsxDEV(\"button\", {\n      onClick: handleLogout,\n      children: \"\\xC7\\u0131k\\u0131\\u015F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this) // Sadece çıkış yapma butonu görünür.\n    : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/login\",\n        children: \"Giri\\u015F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/register\",\n        children: \"Kay\\u0131t\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n_s(Navbar, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = Navbar;\nexport default Navbar; // Bu sayede navbar bileşeni dışarıdan import edilebilir.\nvar _c;\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"names":["React","Link","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","Navbar","_s","navigate","isLoggedIn","localStorage","getItem","handleLogout","removeItem","className","children","to","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/emirbugrairmak/Desktop/Full-Stack-Project/frontend/src/components/Navbar.js"],"sourcesContent":["\n \n\nimport React from 'react'; \nimport { Link, useNavigate } from 'react-router-dom'; \n\nfunction Navbar() {  \n  const navigate = useNavigate(); \n  const isLoggedIn = !!localStorage.getItem('token'); // Kullanıcı giriş yapmış mı yapmamış mı kontrol ediliyor. localStorage ile token kontrolü sağlanıyor.\n  // !! ile boolean değer döndürülüyor.\n\n  const handleLogout = () => { // Çıkış yapma işlemi.\n    localStorage.removeItem('token'); // localStorage'dan token siliniyor.\n    navigate('/login'); // login sayfasına yönlendiriliyor.\n  };\n\n  return ( \n    <nav className=\"navbar\">\n      <Link to=\"/files\">Dosyalarım</Link>\n      <Link to=\"/upload\">Dosya Yükle</Link>\n      {isLoggedIn ? ( // kullanıcı giriş yapmışsa (isLoggedIn true).\n        <button onClick={handleLogout}>Çıkış</button> // Sadece çıkış yapma butonu görünür.\n      ) : (\n        <>     \n          <Link to=\"/login\">Giriş</Link>\n          <Link to=\"/register\">Kayıt</Link>\n        </>\n      )}\n    </nav>\n  );\n}\n\nexport default Navbar;  // Bu sayede navbar bileşeni dışarıdan import edilebilir."],"mappings":";;AAGA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,EAAEC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAErD,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EAChB,MAAMC,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAC9B,MAAMQ,UAAU,GAAG,CAAC,CAACC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;EACpD;;EAEA,MAAMC,YAAY,GAAGA,CAAA,KAAM;IAAE;IAC3BF,YAAY,CAACG,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC;IAClCL,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC;EACtB,CAAC;EAED,oBACEL,OAAA;IAAKW,SAAS,EAAC,QAAQ;IAAAC,QAAA,gBACrBZ,OAAA,CAACH,IAAI;MAACgB,EAAE,EAAC,QAAQ;MAAAD,QAAA,EAAC;IAAU;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eACnCjB,OAAA,CAACH,IAAI;MAACgB,EAAE,EAAC,SAAS;MAAAD,QAAA,EAAC;IAAW;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,EACpCX,UAAU;IAAA;IAAK;IACdN,OAAA;MAAQkB,OAAO,EAAET,YAAa;MAAAG,QAAA,EAAC;IAAK;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,CAAC;IAAA,eAE9CjB,OAAA,CAAAE,SAAA;MAAAU,QAAA,gBACEZ,OAAA,CAACH,IAAI;QAACgB,EAAE,EAAC,QAAQ;QAAAD,QAAA,EAAC;MAAK;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAC9BjB,OAAA,CAACH,IAAI;QAACgB,EAAE,EAAC,WAAW;QAAAD,QAAA,EAAC;MAAK;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA,eACjC,CACH;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACb,EAAA,CAxBQD,MAAM;EAAA,QACIL,WAAW;AAAA;AAAAqB,EAAA,GADrBhB,MAAM;AA0Bf,eAAeA,MAAM,CAAC,CAAE;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}